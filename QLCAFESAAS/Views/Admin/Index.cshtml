@model List<QLCAFESAAS.Models.UserModel>

@{
    ViewData["Title"] = "Danh sách người dùng";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    int index = 1;
    var status = "";
}
<div class="d-flex justify-content-between">
    <h2 class="text-header">Danh sách người dùng</h2>
    <div class="mb-4">
        <div class="card bg-white" style="width: 200px">
            <div class="card-header p-2 ps-3">
                <div class="d-flex justify-content-between">
                    <div>
                        <p class="text-sm mb-0 text-capitalize">Users</p>
                        <h4 id="user-count" class="mb-0">@Model.Count</h4>
                    </div>
                    <div>
                        <svg xmlns="http://www.w3.org/2000/svg" width="52" height="52" fill="currentColor" class="bi bi-people" viewBox="0 0 16 16">
                            <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6m-5.784 6A2.24 2.24 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.3 6.3 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1zM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5" />
                        </svg>
                    </div>
                </div>
            </div>
            <hr class="dark horizontal my-0" />
            <div class="card-footer p-2 ps-3">
                <span id="count-active" class="text-success">@Model.Count(x => x.Status == true)</span>
                tài khoản bình thường
            </div>
        </div>
    </div>
</div>

@if(Model.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-hover table-bordered">
            <thead class="fw-bolder">
                <tr>
                    <td>#</td>
                    <td>Tên người dùng</td>
                    <td>Email</td>
                    <td>Trạng thái</td>
                    <td>Chỉnh sửa</td>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    @if (user.Status == false)
                    {
                        status = "disable";
                    }
                    <tr id="user-@user.UserID" class="user-list">
                        <td class="disable-group @status">@index</td>
                        <td class="disable-group @status">@user.UserName</td>
                        <td class="disable-group @status">@user.Email</td>
                        <td class="disable-group @status text-status">
                            @if(user.Status)
                            {
                                <span>Bình thường</span>
                            }
                            else 
                            {
                                <span>Bị vô hiệu hóa</span>
                            }
                        </td>
                        <td class="d-flex justify-content-center btn-execute">
                            <a href="AccountDetail/@user.UserID" class="btn link-primary ms-2 me-2 disable-group @status">Chi tiết</a>
                        
                            @if (user.Status)
                            {
                                <input type="hidden" name="__RequestVerificationToken" value="@user.UserID" />
                                <button class="btnDelete btn link-danger ms-2 me-2" href="#" onclick="DeleteUser(@user.UserID)">Xóa</button>
                            }
                            else
                            {
                                <input type="hidden" name="__RequestVerificationToken" value="@user.UserID" />
                                <button class="btnActive btn link-danger ms-2 me-2" href="#" onclick="ActiveUser(@user.UserID)">Kích hoạt</button>
                            }
                        </td>
                    </tr>
                    index++;
                    status = "";
                }
            </tbody>
        </table>
    </div>
}
else
{
    <h3 class="text-header">Không có tài khoản nào để hiển thị!</h3>
}
<script>
    async function DeleteUser(userId) {
        if (confirm("Bạn có chắc chắn xóa người dùng này?")) {
            try {
                const res = await fetch('Account/Delete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ UserID: userId })
                })

                const result = await res.json();

                if (result.success) {
                    let userElement = document.querySelector(`#user-${userId}`)
                    let disableClass = userElement.querySelectorAll('.disable-group');

                    disableClass.forEach((e) => {
                        e.classList.add("disable");
                    })

                    userElement.querySelector('.text-status').innerHTML = "<span>Bị vô hiệu hóa</span>";

                    const userCountElement = document.querySelector('#count-active');
                    if (userCountElement) {
                        userCountElement.textContent = result.activeUserCount;
                    }

                    userElement.querySelector('.btnDelete').remove();

                    let btnActive = userElement.querySelector('.btnActive');
                    if (!btnActive) {
                        btnActive = document.createElement("button");
                        btnActive.textContent = "Kích hoạt";
                        btnActive.className = "btnActive btn link-danger ms-2 me-2";
                        btnActive.setAttribute('onclick', `ActiveUser(${userId})`);
                        userElement.querySelector('.btn-execute').appendChild(btnActive);
                    }

                    alert("Xóa thành công!");
                } else {
                    alert("Xóa thất bại!");
                }
            } catch (error) {
                console.log('Error: ', error);
                alert("Đã có lỗi xảy ra");
            }
        }
    }

    async function ActiveUser(userId) {
        if (confirm("Bạn có chắc chắn kích hoạt lại người dùng này?")) {
            try {
                const res = await fetch('Account/Active', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ UserID: userId })
                })

                const result = await res.json();

                if (result.success) {
                    let userElement = document.querySelector(`#user-${userId}`)
                    let disableClass = userElement.querySelectorAll('.disable-group');

                    disableClass.forEach((e) => {
                        e.classList.remove("disable");
                    })

                    userElement.querySelector('.text-status').innerHTML = "<span>Bình thường</span>";

                    const userCountElement = document.querySelector('#count-active');
                    if (userCountElement) {
                        userCountElement.textContent = result.activeUserCount;
                    }

                    userElement.querySelector('.btnActive').remove();

                    let btnDelete = userElement.querySelector('.btnDelete');
                    if (!btnDelete) {
                        btnDelete = document.createElement("button");
                        btnDelete.textContent = "Xóa";
                        btnDelete.className = "btnDelete btn link-danger ms-2 me-2";
                        btnDelete.setAttribute('onclick', `DeleteUser(${userId})`);
                        userElement.querySelector('.btn-execute').appendChild(btnDelete);
                    }

                    alert("kích hoạt thành công!");
                } else {
                    alert("Xóa thất bại!");
                }
            } catch (error) {
                console.log('Error: ', error);
                alert("Đã có lỗi xảy ra");
            }
        }
    }
</script>